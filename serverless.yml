service: serverless-pokemon
frameworkVersion: '3'

plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs16.x
  environment: 
    POKEMON_REPORT_TABLE: ${self:custom.POKEMON_REPORT_TABLE}
    POKEMON_TABLE: ${self:custom.POKEMON_TABLE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - DynamoDB:Query
        - DynamoDB:PutItem
        - DynamoDB:GetItem
        - DynamoDB:UpdateItem
        - DynamoDB:DeleteItem
      Resource:
        - "arn:aws:dynamodb:*:*:table/${self:provider.environment.POKEMON_REPORT_TABLE}"
        - "arn:aws:dynamodb:*:*:table/${self:provider.environment.POKEMON_TABLE}"

custom:
  POKEMON_REPORT_TABLE: poke-report
  POKEMON_TABLE: pokemon
  esbuild:
    bundle: true
    minify: false
    exclude: 'aws-sdk'
    target: node16
    define:
      'require.resolve': undefined
    platform: node
    concurrency: 10

package:
  individually: true

functions:
  battle:
    handler: src/functions/modules/battle/handler.battle
    layers:
      - !Ref PokemonLibLambdaLayer
      - !Ref PokemonBattleLibLambdaLayer
    events:
      - http:
          path: battle
          cors: true
          method: post 
          
  save:
    handler: src/functions/modules/save-pokemon/handler.save
    layers:
      - !Ref PokemonLibLambdaLayer
      - !Ref PokemonSaveLibLambdaLayer
    events:
      - http:
          path: save
          cors: true
          method: post

layers:
  PokemonLib:
    path: src/functions/lib
    name: ${sls:stage}-pokemon-lib-layer
    description: Layer for pokemon functions
    compatibleRuntimes:
      - nodejs16.x
  PokemonBattleLib:
    path: src/functions/modules/battle
    name: ${sls:stage}-battle-pokemon-lib-layer
    description: Layer for pokemon functions
    compatibleRuntimes:
      - nodejs16.x
  PokemonSaveLib:
    path: src/functions/modules/save-pokemon
    name: ${sls:stage}-save-pokemon-lib-layer
    description: Layer for pokemon functions
    compatibleRuntimes:
      - nodejs16.x

resources:
  Resources:
    PokemonTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: pokeId
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: pokeId
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        TableName: ${self:custom.POKEMON_TABLE}
    PokemonReportTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1   
        TableName: ${self:custom.POKEMON_REPORT_TABLE}              